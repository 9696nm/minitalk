
signalとはなにか 使う関数とか広く薄く
	https://zenn.dev/hosu/articles/500079bf9be5fa
	https://en-junior.com/sigaction-signal/
もう少し詳しく
	https://qiita.com/Kernel_OGSun/items/e96cef5487e25517a576

実践編 動かして理解する
	https://qiita.com/keitean/items/c641b3e158e01dacb7f6

シグナル系関数まとめ
	https://qiita.com/keitean/items/00600696a5d55623b3bd

signal送信元はどこ？
	https://qiita.com/takeoverjp/items/08978c6c4fe9234c148b

シグナルハンドラにprintf()を書いてはいけない
	https://qiita.com/rarul/items/090920b850acc4b7e910

Unicodeとは？
	https://note.com/hovinci/n/nb9e949979fdf

非同期関数のルール
	https://www.jpcert.or.jp/sc-rules/c-sig30-c.html

sig_atomic_t型って？
	https://qiita.com/come/items/3ac3633071a51bd6f6f0


test case
				ft_putstr_fd("Client error.\n", STDOUT_FILENO);


Ver1.0 
	改善すべき点
	・他のPIDからの割り込み処理
	->沼らない程度に

	・パラメータ調整
	->pcスペック？送信のディレイが良くない？

	・ビット抜けがまだある
	->最後の1bitがエラーを取っちゃってるのか？
	->7+1か9個目を取っちゃったかは不明
	->どうやら前後が反転しているよう  (01100100)->(01010100)

	・serverからの返信をつかめない確率
	ｰ>PIDチェックは最初だけにするとか？

	・非同期処理の変数の定義について
	->volatile sig_atomic_tを使ってみては？

	・クロックによってdelayを変動させる
	->せめて時間を数えられないと厳しそう
	->そんなマクロあるのかねぇ、、

	処理内容
		server
			空きシグナルSIGUSR1,2をセットアップ

			環境変数で
				・signalが送られた回数
				・送られた文字列(bitで管理)
				・送られた相手のプロセスID
			を管理している

		client
			環境変数
				・返信がerrorかどうか管理用に使用

	チャート
		1.serverの起動
		->受信まで待機　g_stor[COUNT]で送られたbit数を監視している

		2.clientの起動
		->1byte分を2進数に変換し頭から10us毎に送信

		3.serverの受信
		->1bitにつき100us待ち問題なく8bit受信できればclientに成功の信号を送信　g_stor[COUNT]を初期化
		->100us待っても8bit分受信できないない場合は受信失敗の信号を送る　g_stor[COUNT]を初期化
		
		4.clientの処理
		->1byte分送信したあとserverから成功が帰ってきたのならば次の1byteに移行し(->2)また最後まで送信した場合はsccuseを出力し(return (0))
		->失敗が帰ってきた場合はbit抜けがあったと判断しtimeoutを出力した後再度送信を行い(->2)
		->送信後500us経っても返答がなかった場合
			・相手が存在しない
			・落ちている
			・sleep時間に問題がある
			としてエラー表示を出した後タスクを終了(return (-1))
